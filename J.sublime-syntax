%YAML 1.2
---
name: J
file_extensions: [ijs, ijt]
scope: source.j

variables:
  validname: '[A-Za-z][A-Za-z_0-9]*'
  closeexpdef: '^\s*\)\s*$'

contexts:
  main:
    - include: comments
    - include: strings
    - match: \b([1-4]|13|adverb|conjunction|verb|monad|dyad)\s+(:\s*0|define)\b
      push: expdef
    - match: '\b(0|noun)\s+(:\s*0|define)\b'
      push: noundef
    - match: ^\s*\bNote\b(?!\s*\=[:.])\s*[\'\d].*$
      push: notes
    - include: note
    - include: numbers
    - include: nouns
    - include: verbs
    - include: adverbs
    - include: conjunctions
    - include: globals
    - include: locals

  comments:
    - match: \bNB\..*$
      scope: comment.j

  strings:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.j
      push:
        - meta_scope: string.quoted.j
        - match: "'"
          captures:
            0: punctuation.definition.string.end.j
          pop: true
        - match: $
          captures:
            0: invalid.illegal.missing-string-end.j
          pop: true

  globals:
    - match: "=:"
      scope: global

  locals:
    - match: "=."
      scope: local

  numbers:
    - match: '\b[_0-9][_0-9\.a-zA-Z]*\b(?![.:])'
      scope: constant.numeric

  nouns:
    - match: '\b(_\.|a\.|a:)(?![.:])'
      scope: noun.j

  verbs:
    - match: '((_?[1-9]:)|(\b0:)|({::))(?![.:])'
      scope: identifier.verb.j
    - match: '\b((p\.\.)|([AcCeEiIjLopr]\.)|([ipqsux]:))(?![.:])'
      scope: identifier.verb.j
    - match: '([<>+*\-%$|,#{}^~"?]\.)(?![.:])'
      scope: identifier.verb.j
    - match: '([<>+*\-%$|,#{};~"_/\\\[]:)(?![.:])'
      scope: identifier.verb.j
    - match: '([<>+*\-%$|,#{!;^=?\[\]])(?![.:])'
      scope: identifier.verb.j

  adverbs:
    - match: '\b(([bfMt]\.)|(t:))(?![.:])'
      scope: identifier.adverb.j
    - match: '(([/\\]\.)|([~/\\}]))(?![.:])'
      scope: identifier.adverb.j

  conjunctions:
    - match: '\b(([dDHT]\.)|([DLS]:))(?![.:])'
      scope: identifier.conjunction.j
    - match: '((&\.:)|([&@!;]\.)|([&@!`^]:)|([&@`"]))(?![.:])'
      scope: identifier.conjunction.j
    - match: '\s(([.:][.:])|([.:]))(?![.:])'
      scope: identifier.conjunction.j

  controls:
    - match: \b(if|do|else|elseif|end|for|select|case|fcase)\.(?![.:])
      scope: keyword.control.j
    - match: \b(assert|break|continue|return|while|whilst)\.(?![.:])
      scope: keyword.control.j
    - match: \b(throw|try|catch|catchd|catcht)\.(?![.:])
      scope: keyword.control.j
    - match: \b(for_{{validname}}|goto_{{validname}}|label_{{validname}})\.(?![.:])
      scope: keyword.control.j

  expargs:
    - match: \b[nmuvxy](?![\w.:])
      scope: exparg

  expdef:
    - meta_content_scope: definition.expdef.j
    - include: comments
    - include: strings
    - include: numbers
    - include: nouns
    - include: verbs
    - include: adverbs
    - include: conjunctions
    - include: globals
    - include: locals
    - include: controls
    - include: expargs
    - match: '{{closeexpdef}}'
      pop: true

  noundef:
    - meta_content_scope: definition.noundef.j
    - match: '{{closeexpdef}}'
      pop: true

  notes:
    - meta_scope: definition.note.j
    - match: '{{closeexpdef}}'
      pop: true

  note:
    - match: \bNote\b(?!\s*\=[:.])\s*['\d].*$
      scope: comment.j
